{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","defaultReoderOptions","sortType","NONE","isReversed","useState","reorderOptions","setReorderOptions","reoderedGoods","goods","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","cn","onClick","state","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,mFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,IAAMC,EAAuB,CAC3BC,SAAUJ,EAASK,KACnBC,YAAY,GAGd,EAA4CC,mBAASJ,GAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KAEMC,EAlCD,SACLC,EADK,GAGJ,IADCP,EACF,EADEA,SAAUE,EACZ,EADYA,WAENM,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQX,GACN,KAAKJ,EAASgB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKf,EAASkB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITb,GACFM,EAAaQ,UAGRR,EAWeS,CAAkBpB,EAAiBO,GA2BzD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYhB,EAAeJ,WAAaJ,EAASgB,WAEnDS,QAjCmB,WACzBhB,GAAkB,SAACiB,GAAD,mBAAC,eACdA,GADa,IAEhBtB,SAAUJ,EAASgB,eAyBjB,iCAUA,wBACEO,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYhB,EAAeJ,WAAaJ,EAASkB,SAEnDO,QApCa,WACnBhB,GAAkB,SAACiB,GAAD,mBAAC,eACdA,GADa,IAEhBtB,SAAUJ,EAASkB,aA4BjB,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAahB,EAAeF,aAE9BmB,QAvCQ,WACdhB,GAAkB,SAACiB,GAAD,mBAAC,eACdA,GADa,IAEhBpB,YAAaoB,EAAMpB,iBA+BjB,sBAUEE,EAAeJ,WAAaJ,EAASK,MACpCG,EAAeF,aAChB,wBACEiB,KAAK,SACLD,UAAU,8BAKVG,QA9CI,WACZhB,EAAkBN,IAsCZ,sBAcJ,6BACGO,EAAciB,KAAI,SAACC,GAAD,OACjB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC1InBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c6714444.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const defaultReoderOptions = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  const [reorderOptions, setReorderOptions] = useState(defaultReoderOptions);\n\n  const reoderedGoods = getReorderedGoods(goodsFromServer, reorderOptions);\n\n  const sortAlphabetically = () => {\n    setReorderOptions((state) => ({\n      ...state,\n      sortType: SortType.ALPHABET,\n    }));\n  };\n\n  const sortByLength = () => {\n    setReorderOptions((state) => ({\n      ...state,\n      sortType: SortType.LENGTH,\n    }));\n  };\n\n  const reverse = () => {\n    setReorderOptions((state) => ({\n      ...state,\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  const reset = () => {\n    setReorderOptions(defaultReoderOptions);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': reorderOptions.sortType !== SortType.ALPHABET,\n          })}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': reorderOptions.sortType !== SortType.LENGTH,\n          })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !reorderOptions.isReversed,\n          })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(reorderOptions.sortType !== SortType.NONE\n        || reorderOptions.isReversed) && (\n          <button\n            type=\"button\"\n            className=\"\n              button\n              is-danger\n              is-light\n            \"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {reoderedGoods.map((good) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}