{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortType","NONE","isReversed","reorderOptions","setReorderOptions","reoderedGoods","goods","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","sortAlphabeticallyRef","useRef","sortByLengthRef","reverseRef","className","type","onClick","e","currentTarget","classList","remove","current","add","state","sortAlphabetically","ref","sortByLength","toggle","toString","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,iEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAA4CC,mBAAS,CACnDC,SAAUJ,EAASK,KACnBC,YAAY,IAFd,mBAAOC,EAAP,KAAuBC,EAAvB,KAKMC,EAhCD,SACLC,EADK,GAGJ,IADCN,EACF,EADEA,SAAUE,EACZ,EADYA,WAENK,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQV,GACN,KAAKJ,EAASe,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITZ,GACFK,EAAaQ,UAGRR,EASeS,CAAkBnB,EAAiBM,GAEnDc,EAAwBC,iBAAY,MACpCC,EAAkBD,iBAAY,MAC9BE,EAAaF,iBAAY,MAwD/B,OACE,sBAAKG,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,4BAKVE,QAAS,SAACC,IAhES,SAACA,GAC1BA,EAAEC,cAAcC,UAAUC,OAAO,YAE7BR,EAAgBS,SAClBT,EAAgBS,QAAQF,UAAUG,IAAI,YAGxCzB,GAAkB,SAAC0B,GAAD,mBAAC,eACdA,GADa,IAEhB9B,SAAUJ,EAASe,cAwDboB,CAAmBP,IAErBQ,IAAKf,EAVP,iCAeA,wBACEK,KAAK,SACLD,UAAU,+BAKVE,QAAS,SAACC,IAlEG,SAACA,GACpBA,EAAEC,cAAcC,UAAUC,OAAO,YAE7BV,EAAsBW,SACxBX,EAAsBW,QAAQF,UAAUG,IAAI,YAG9CzB,GAAkB,SAAC0B,GAAD,mBAAC,eACdA,GADa,IAEhB9B,SAAUJ,EAASiB,YA0DboB,CAAaT,IAEfQ,IAAKb,EAVP,4BAeA,wBACEG,KAAK,SACLD,UAAU,+BAKVE,QAAS,SAACC,IApEF,SAACA,GACfA,EAAEC,cAAcC,UAAUQ,OAAO,YAEjC9B,GAAkB,SAAC0B,GAAD,mBAAC,eACdA,GADa,IAEhB5B,YAAa4B,EAAM5B,gBAgEba,CAAQS,IAEVQ,IAAKZ,EAVP,qBAeCf,EAAc8B,aAAetC,EAAgBsC,YAC5C,wBACEb,KAAK,SACLD,UAAU,8BAKVE,QA3EI,WACRJ,EAAgBS,SAClBT,EAAgBS,QAAQF,UAAUG,IAAI,YAGpCZ,EAAsBW,SACxBX,EAAsBW,QAAQF,UAAUG,IAAI,YAG1CT,EAAWQ,SACbR,EAAWQ,QAAQF,UAAUG,IAAI,YAGnCzB,EAAkB,CAChBJ,SAAUJ,EAASK,KACnBC,YAAY,KAqDR,sBAcJ,6BACGG,EAAc+B,KAAI,SAACC,GAAD,OACjB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCtLnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.762684cc.chunk.js","sourcesContent":["import { useState, useRef } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [reorderOptions, setReorderOptions] = useState({\n    sortType: SortType.NONE,\n    isReversed: false,\n  });\n\n  const reoderedGoods = getReorderedGoods(goodsFromServer, reorderOptions);\n\n  const sortAlphabeticallyRef = useRef<any>(null);\n  const sortByLengthRef = useRef<any>(null);\n  const reverseRef = useRef<any>(null);\n\n  const sortAlphabetically = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.currentTarget.classList.remove('is-light');\n\n    if (sortByLengthRef.current) {\n      sortByLengthRef.current.classList.add('is-light');\n    }\n\n    setReorderOptions((state) => ({\n      ...state,\n      sortType: SortType.ALPHABET,\n    }));\n  };\n\n  const sortByLength = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.currentTarget.classList.remove('is-light');\n\n    if (sortAlphabeticallyRef.current) {\n      sortAlphabeticallyRef.current.classList.add('is-light');\n    }\n\n    setReorderOptions((state) => ({\n      ...state,\n      sortType: SortType.LENGTH,\n    }));\n  };\n\n  const reverse = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.currentTarget.classList.toggle('is-light');\n\n    setReorderOptions((state) => ({\n      ...state,\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  const reset = () => {\n    if (sortByLengthRef.current) {\n      sortByLengthRef.current.classList.add('is-light');\n    }\n\n    if (sortAlphabeticallyRef.current) {\n      sortAlphabeticallyRef.current.classList.add('is-light');\n    }\n\n    if (reverseRef.current) {\n      reverseRef.current.classList.add('is-light');\n    }\n\n    setReorderOptions({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className=\"\n            button\n            is-info\n            is-light\n          \"\n          onClick={(e) => {\n            sortAlphabetically(e);\n          }}\n          ref={sortAlphabeticallyRef}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"\n            button\n            is-success\n            is-light\n          \"\n          onClick={(e) => {\n            sortByLength(e);\n          }}\n          ref={sortByLengthRef}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"\n            button\n            is-warning\n            is-light\n          \"\n          onClick={(e) => {\n            reverse(e);\n          }}\n          ref={reverseRef}\n        >\n          Reverse\n        </button>\n\n        {reoderedGoods.toString() !== goodsFromServer.toString() && (\n          <button\n            type=\"button\"\n            className=\"\n            button\n            is-danger\n            is-light\n          \"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {reoderedGoods.map((good) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}